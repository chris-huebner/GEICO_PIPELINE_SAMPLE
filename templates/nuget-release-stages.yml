#
# YAML template with stages for releasing NuGet packages:
# 1. Push the pre-release package; assumes AzDO Environment named 'NuGet Prerelease' exists.
# 2. Push the production package; assumes AzDO Environment named 'NuGet Production' exists and requires an approval.
#
# Since resources cannot be declared in templates, this template requires the top-level
# YAML pipeline file to create the PipelineAutomation respository resource, for example:
#
# resources:
#  repositories:
#    - repository: PipelineAutomation
#      type: git
#      name: 'Apollo/PipelineAutomation'

parameters:
- name: dependsOn
  type: string

- name: nugetPushFeed
  default: ''

- name: packageFolder
  default: packages

- name: prereleaseSubfolder
  default: prerelease

- name: prodSubFolder
  default: production

- name: buildPool
  default: 'GEICO Agents'

- name: buildPoolDemands
  type: object
  default: []

stages:
- stage: PushPrerelease
  displayName: 'Push Pre-release'
  dependsOn: ${{ parameters.dependsOn }}
  pool:
    name: ${{ parameters.buildPool }}
    demands: ${{ parameters.buildPoolDemands }}
  jobs:
  - template: ./nuget-push-package-job.yml
    parameters:
      environment: 'NuGet Prerelease'
      displayName: 'Push Pre-release Package'
      packagePath: '${{ parameters.packageFolder }}/${{ parameters.prereleaseSubfolder }}'
      nugetPushFeed: ${{ parameters.nugetPushFeed }}

- stage: PushProduction
  displayName: Push Production
  dependsOn: PushPrerelease
  pool:
    name: ${{ parameters.buildPool }}
    demands: ${{ parameters.buildPoolDemands }}
  jobs:
  - template: ./nuget-push-package-job.yml
    parameters:
      environment: NuGet Production
      displayName: Push Production
      packagePath: '${{ parameters.packageFolder }}/${{ parameters.prodSubFolder }}'
      nugetPushFeed: ${{ parameters.nugetPushFeed }}
